# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    zone_projet: '%env(zone_projet)%'
    import_path: '%kernel.project_dir%/upload/project_doc/'
    import_path_photos: '%kernel.project_dir%/upload/project_photos/'
    import_path_photos_user: '%kernel.project_dir%/upload/user_photos/'
    import_path_photos_tache: '%kernel.project_dir%/upload/tache_photos/'
    import_path_doc_tache: '%kernel.project_dir%/upload/tache_doc/'
    # roles
    droits:
        - ROLE_LISTE_DES_UTILISATEURS
        - ROLE_CRÉATION_UTILISATEUR
        - ROLE_MODIFICATION_UTILISATEUR
        - ROLE_LISTE_DES_PROFILS
        - ROLE_CRÉATION_PROFIL
        - ROLE_MODIFICATION_PROFIL
        - ROLE_LISTE_DES_DROITS
        - ROLE_DÉTAILS_UTILISATEUR
        - ROLE_INDICATEURS_ADMIN_NOMBRE_UTILSATEURS,_RÉPARTITION_DES_UTILISATEURS_PAR_PROFIL_
        - ROLE_LISTE_DES_PROJETS
        - ROLE_CRÉATION_PROJET
        - ROLE_DÉTAILS_PROJET_
        - ROLE_VALIDATION_PROJET
        - ROLE_EXPORT_LISTE_DES_PROJETS
        - ROLE_MODIFICATION_PROJET_CHAMP_MONTANT_
        - ROLE_MODIFICATION_PROJET_CHAMP_PRIORITÉ_
        - ROLE_MODIFICATION_PROJET_CHAMP_NON_MONTANT_ET_NON_PRIORITÉ_
        - ROLE_LISTE_DES_TÂCHES
        - ROLE_CRÉATION_TÂCHE
        - ROLE_NOMBRE_DE_PROJETS
        - ROLE_KPIS_POUR_INSTITUTION_DE_COLLECTE/CELLULE_DE_COORDINATION/ETI
        - ROLE_KPIS_POUR_CSA/CP
        - ROLE_RÉPARTITION_DES_ÉVOLUTIONS_DES_PROJETS
        - ROLE_CARTE
        - ROLE_TABLEAUX_DES_LISTES_DÉROULANTES
        - ROLE_INSERTION_VALEUR_LISTE_DÉROULANTE
        - ROLE_MODIFICATION_VALEUR_LISTE_DÉROULANTE
        - ROLE_SUPPRESSION_LOGIQUE_VALEUR_LISTE_DÉROULANTE
    categories_tache: ['Passation de marché', 'Réalisation financière', 'Réalisation physique']
    status_tache: ['A faire', 'En cours', 'Terminée']
    type_tache: ['Passation de marché', 'Montant engagé',"Crédit de paiement de l'année en cours", 'Montant des dépenses décaissées(Montant mandaté)','Montant des dépenses décaissées(Montant liquidé)','Exercice budgétaire','budget consommé', 'Avancement']
    kpi_projets:
        a_faire: ['PROJETS RESTANT A FAIRE',1]
        en_cours: ['PROJETS EN COURS', 2]
        realise: ['PROJETS REALISES', 3]
        en_retard: ['PROJETS EN RETARD', 4]
        total: ['TOTAL DES PROJETS', 5]
        surcout: ['PROJETS EN SURCOUT', 6]
        montant: ['MONTANT TOTAL ENGAGE/DECAISSE', 7]
        service: ['ORDRE DE SERVICE LANCE', 8]
        montant_engage: ['MONTANT TOTAL ENGAGE', 9]
        montant_decaisse: ['MONTANT TOTAL DECAISSE', 10]
    projet_situation:
        termine:
            id: 14
            id_libelle: [14, "Livraison effectuée"]
        en_cours:
            id: [11, 12, 13]
            id_libelle:
                - [11,"Travaux en cours d'exécution"]
                - [12,"Mandatement en cours"]
                - [13,"Livraison en cours"]
        a_faire:
            id: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
            id_libelle:
                - [1,"DAO et affichage en attente validation CNM"]
                - [2,"PPM en cours d'élaboration"]
                - [3,"PPM en attente validation CNM"]
                - [4,"DAO en cours d'élaboration"]
                - [5,"DAO et affichage en attente validation CNM"]
                - [6,"AO lancé"]
                - [7,"Evaluations offres en cours"]
                - [8,"Attribution - Contractualisation en cours"]
                - [9,"Signature marché-Visa CF-OS en cours"]
                - [10,"Visa CF 1er semestre 2020-Travaux en cours"]

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    rdk_api.event.authentication_success_listener:
            class: App\EventListener\AuthentificationEventListener
            arguments: [ '@service_container' ]
            tags:
                - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }
    rdk_api.event.jwt_created_listener:
        class: App\EventListener\AuthentificationEventListener
        arguments: [ '@service_container','@request_stack' ]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }
    rdk_api.event.authentication_failure_listener:
        class: App\EventListener\AuthentificationEventListener
        arguments: [ '@service_container' ]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_failure, method: onAuthenticationFailureResponse }
    acme_api.event.jwt_expired_listener:
        class: App\EventListener\JWTListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_expired, method: onJWTExpired }
    rdk_api.event.jwt_invalid_listener:
        class: App\EventListener\JWTListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_invalid, method: onJWTInvalid }
    rdk_api.jwt_not_found_listener:
        class: App\EventListener\JWTListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_not_found, method: onJWTNotFound }
    rdk.rest_listener:
        class: App\EventListener\RestListener
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }

    App\Swagger\SwaggerDecorator:
        decorates: 'api_platform.swagger.normalizer.documentation'
        arguments: ['@App\Swagger\SwaggerDecorator.inner']
        autoconfigure: false

    App\Swagger\SwaggerManageProject:
        decorates: 'api_platform.swagger.normalizer.documentation'
        arguments: ['@App\Swagger\SwaggerManageProject.inner']
        autoconfigure: false
    App\Swagger\SwaggerZoneDecorator:
        decorates: 'api_platform.swagger.normalizer.documentation'
        arguments: ['@App\Swagger\SwaggerZoneDecorator.inner']
        autoconfigure: false
    App\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception}
#    App\Subscriber\UserSubscriber:
#        arguments: ['@App\Service\ProjetService', '@Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface','%import_path_photos_user%']
#        tags:
#            - { name: 'doctrine.event_subscriber', connection: default }

#    _instanceof:
#        Doctrine\Common\EventSubscriber:
#            tags: ['doctrine.event_subscriber']

    App\DataProvider\UserItemDataProvider:
        bind:
            $itemDataProvider: '@api_platform.doctrine.orm.default.item_data_provider'

    App\EventListener\ProfilListener:
        tags:
            - { name: doctrine.orm.entity_listener, event: postUpdate, entity: 'App\Entity\PrmProfil', lazy: true, connection: default }

    App\EventListener\TachesListener:
        tags:
            - { name: doctrine.orm.entity_listener, event: postPersist, entity: 'App\Entity\PrmTaches', lazy: true, connection: default }

    engagement_listener:
        class:  App\EventListener\EngagementListener
        arguments:
            - '@snc_redis.doctrine'
        tags:
            - { name: doctrine.orm.entity_listener }

    secteur_listener:
        class:  App\EventListener\SecteurListener
        arguments:
            - '@snc_redis.doctrine'
        tags:
            - { name: doctrine.orm.entity_listener }

    priorite_projet_listener:
        class:  App\EventListener\PrioriteProjetListener
        arguments:
            - '@snc_redis.doctrine'
        tags:
            - { name: doctrine.orm.entity_listener }

    categorie_listener:
        class:  App\EventListener\CategorieProjetListener
        arguments:
            - '@snc_redis.doctrine'
        tags:
            - { name: doctrine.orm.entity_listener }

    app.projet_listener:
        class: App\EventListener\ProjetListener
        public: true
#        tags:
#            - { name: doctrine.orm.entity_listener, event: postUpdate, entity: 'App\Entity\PrmProjet', lazy: true, connection: default }


    app.history:
        class: App\Subscriber\HistorySubscriber
        arguments: ['@service_container','@security.helper', '@trackable.reader']
        tags:
          - { name: doctrine.event_listener, event: preUpdate}
    trackable.reader:
        class: App\Annotation\TrackableReader
        arguments: ['@annotations.reader']
    fos_user.security.interactive_login_listener: '@App\EventListener\ProfilListener'
